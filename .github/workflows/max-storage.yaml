name: Build Kiwi Next
on: push
# on: [workflow_call]

jobs:
  build:
    name: Build Kiwi Next
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        platform: [arm]
        # platform: [arm, arm64, x86, x64]
    
    steps:
      # - name: Set performance governor and disable save power service
      #   run: |
      #     sudo apt install cpufrequtils -y
      #     processors_count=$(cat /proc/cpuinfo | grep processor | wc -l)

      #     # Set "performance" governor to each detected CPU
      #     for i in $(seq 0 $((processors_count-1)))
      #     do
      #     	sudo cpufreq-set -g performance -c $i
      #     done
          
       #    sudo systemctl is-enabled ondemand
       #   sudo systemctl disable ondemand
      - name: CI workflow device configuration
        run: |
          df -h
          uname -a
          lscpu
          free -h
    
      - name: Enabling i386 and updating APT repository
        run:  |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get upgrade -y
    
      - name: Fix problem packages
        run: |
          # set +e
          sudo apt install -yf libglib2.0-0:i386
          # sudo dpkg --configure -a
          # sudo apt update
          # sudo apt --fix-broken install
          # sudo apt install -yf libglib2.0-0:i386
          # sudo dpkg --force depends -P libglib2.0-0:i386
          # sudo apt install -yf libglib2.0-0:i386
    
      - name: Reclaiming disk space on / by removing packages
        run: |
           echo "Free additional disk space on host"
           sudo systemctl stop snapd && sudo systemctl disable snapd
           sudo apt purge -yq $(dpkg -l | grep '^ii' | awk '{ print $2 }' | grep -P '(cabal-|dotnet-|ghc-|gfortran-|libmono|php|aspnetcore)') apache2 snapd imagemagick powershell aria2 ansible shellcheck mono-runtime-common monodoc-manual ruby shellcheck zsync firefox google-chrome-stable google-cloud-sdk 
           sudo apt autoremove -yq
           sudo apt-get autoclean

      - name: Reclaiming disk space on / by removing folders
        run: |
           sudo rm -rf /snap /var/snap /var/lib/snapd /var/cache/snapd /usr/lib/snapd /root/snap
           sudo rm -rf /opt/hostedtoolcache /usr/local /usr/share/dotnet /usr/share/swift /opt/ghc
           sudo rm -rf "/usr/local/share/boost"
           sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 12288 # 12 GB
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: Build
        run: |
          echo "Free space:"
          df -h

      - name: Installing Python and OpenJDK
        run: sudo apt install -y python2 openjdk-8-jdk-headless libncurses5 ccache
        
      - name: Install chromium deps tool
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git $GITHUB_WORKSPACE/depot_tools
        
      - name: Download chromium source code
        run: |
          export PATH="$PATH:$GITHUB_WORKSPACE/depot_tools"  # TODO: fix
          mkdir $GITHUB_WORKSPACE/chromium && cd $GITHUB_WORKSPACE/chromium
          fetch --nohooks --nohistory android
          
      - name: Install chromium build depends
        run: |
          export PATH="$PATH:$GITHUB_WORKSPACE/depot_tools"  # TODO: fix
          cd $GITHUB_WORKSPACE/chromium/src
          echo "target_os = [ 'android' ]" >> ../.gclient
          gclient sync -D --no-history -v 
          build/install-build-deps.sh --android
          gclient runhooks
     
      - name: Settings build config
        run: |
          export PATH="$PATH:$GITHUB_WORKSPACE/depot_tools"  # TODO: fix
          cd $GITHUB_WORKSPACE/chromium/src
        
          mkdir -p out/Default
          cat <<EOF > out/Default/args.gn
          target_os = "android"
          target_cpu = "arm"
          is_component_build = false
          is_debug = false
          is_official_build = true
          symbol_level = 1
          disable_fieldtrial_testing_config = true
          dfmify_dev_ui = false
          disable_autofill_assistant_dfm = true
          disable_tab_ui_dfm = true
          ffmpeg_branding = "Chrome"
          proprietary_codecs = true
          is_cfi = true
          use_cfi_cast = true
          enable_gvr_services = false
          enable_remoting = false
          enable_reporting = false
          EOF
          gn gen out/Default
          autoninja -C out/Default chrome_public_apk
          
          ls out/Default
          ls out/Default/bin/chrome_public_apk
